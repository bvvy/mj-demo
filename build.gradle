buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
        querydslVersion = '4.2.1'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'



group = 'com.mj'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
repositories {
    mavenCentral()
}

idea {
    module {
//        outputDir = file("build/classes")
//        testOutputDir = file("build")
        sourceDirs += file('build/generated/')
        generatedSourceDirs += file('build/generated/')
    }
}

compileJava {
    options.compilerArgs << "-s"
    options.compilerArgs << "$projectDir/build/generated/"

    doFirst {
        // make sure that directory exists
        file(new File(projectDir, "/build/generated/")).mkdirs()
    }
}

clean.doLast {
    // clean-up directory when necessary
    file(new File(projectDir, "/build/generated")).deleteDir()
}

sourceSets {
    generated {
        java {
            srcDir "$projectDir/build/generated"
        }
    }
}
dependencies {
    // springboot
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    // queryDsl
    compile "com.querydsl:querydsl-apt:${querydslVersion}:jpa"
    compile("com.querydsl:querydsl-jpa:${querydslVersion}")
    //swagger
    compile('io.springfox:springfox-swagger2:2.8.0')
    compile('io.springfox:springfox-swagger-ui:2.8.0')
    // database
    runtime('org.postgresql:postgresql')
    //lombok
    compile('org.projectlombok:lombok')

    //test
    testCompile('org.springframework.boot:spring-boot-starter-test')
}